// GENERATED CODE - DO NOT MODIFY BY HAND
//
// This file was generated by the RDF Mapper Generator.
// Source: lib/models/note_group_key.dart

// ignore_for_file: unused_import, unnecessary_cast, prefer_const_constructors
// ignore_for_file: unnecessary_brace_in_string_interps, prefer_conditional_assignment
// ignore_for_file: lines_longer_than_80_chars, avoid_redundant_argument_values
// ignore_for_file: unused_field

import 'package:rdf_core/rdf_core.dart';
import 'package:rdf_mapper/rdf_mapper.dart';

// Other imports
import 'package:personal_notes_app/models/note_group_key.dart' as ngk;
import 'package:rdf_vocabularies_schema/schema.dart';

/// Generated mapper for [ngk.NoteGroupKey] global resources.
///
/// This mapper handles serialization and deserialization between Dart objects
/// and RDF triples for resources of type `ngk.NoteGroupKey`.
class NoteGroupKeyMapper implements LocalResourceMapper<ngk.NoteGroupKey> {
  /// Constructor
  const NoteGroupKeyMapper();

  @override
  IriTerm? get typeIri => null;

  @override
  ngk.NoteGroupKey fromRdfResource(
    BlankNodeTerm subject,
    DeserializationContext context,
  ) {
    final reader = context.reader(subject);

    final DateTime createdMonth = reader.require(
      SchemaNoteDigitalDocument.dateCreated,
    );

    return ngk.NoteGroupKey(createdMonth);
  }

  @override
  (BlankNodeTerm, Iterable<Triple>) toRdfResource(
    ngk.NoteGroupKey resource,
    SerializationContext context, {
    RdfSubject? parentSubject,
  }) {
    final subject = BlankNodeTerm();

    return context
        .resourceBuilder(subject)
        .addValue(SchemaNoteDigitalDocument.dateCreated, resource.createdMonth)
        .build();
  }
}
