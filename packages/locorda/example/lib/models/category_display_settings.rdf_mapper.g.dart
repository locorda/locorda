// GENERATED CODE - DO NOT MODIFY BY HAND
//
// This file was generated by the RDF Mapper Generator.
// Source: lib/models/category_display_settings.dart

// ignore_for_file: unused_import, unnecessary_cast, prefer_const_constructors
// ignore_for_file: unnecessary_brace_in_string_interps, prefer_conditional_assignment
// ignore_for_file: lines_longer_than_80_chars, avoid_redundant_argument_values
// ignore_for_file: unused_field, unnecessary_string_interpolations

import 'package:rdf_core/rdf_core.dart';
import 'package:rdf_mapper/rdf_mapper.dart';

// Other imports
import 'package:personal_notes_app/models/category_display_settings.dart'
    as cds;
import 'package:personal_notes_app/vocabulary/personal_notes_vocab.dart';

/// Generated mapper for [cds.CategoryDisplaySettings] global resources.
///
/// This mapper handles serialization and deserialization between Dart objects
/// and RDF triples for resources of type `cds.CategoryDisplaySettings`.
class CategoryDisplaySettingsMapper
    implements LocalResourceMapper<cds.CategoryDisplaySettings> {
  /// Constructor
  const CategoryDisplaySettingsMapper();

  @override
  IriTerm? get typeIri => null;

  @override
  cds.CategoryDisplaySettings fromRdfResource(
    BlankNodeTerm subject,
    DeserializationContext context,
  ) {
    final reader = context.reader(subject);

    final String? color = reader.optional(PersonalNotesVocab.categoryColor);
    final String? icon = reader.optional(PersonalNotesVocab.categoryIcon);

    return cds.CategoryDisplaySettings(color: color, icon: icon);
  }

  @override
  (BlankNodeTerm, Iterable<Triple>) toRdfResource(
    cds.CategoryDisplaySettings resource,
    SerializationContext context, {
    RdfSubject? parentSubject,
  }) {
    final subject = BlankNodeTerm();

    return context
        .resourceBuilder(subject)
        .when(
          resource.color != null,
          (b) => b.addValue(PersonalNotesVocab.categoryColor, resource.color),
        )
        .when(
          resource.icon != null,
          (b) => b.addValue(PersonalNotesVocab.categoryIcon, resource.icon),
        )
        .build();
  }
}
