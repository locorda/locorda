// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Main Foaf vocabulary class containing all terms
///
/// Contains all terms defined in the http://xmlns.com/foaf/0.1/ vocabulary.
class Foaf {
  // Private constructor prevents instantiation
  const Foaf._();

  /// Base IRI for Foaf vocabulary
  /// [Spec](http://xmlns.com/foaf/0.1/)
  static const String namespace = 'http://xmlns.com/foaf/0.1/';
  static const String prefix = 'foaf';

  /// IRI for foaf:LabelProperty
  ///
  /// A foaf:LabelProperty is any RDF property with texual values that serve as labels.
  ///
  static const LabelProperty = IriTerm(
    'http://xmlns.com/foaf/0.1/LabelProperty',
  );

  /// IRI for foaf:Person
  ///
  /// A person.
  ///
  static const Person = IriTerm('http://xmlns.com/foaf/0.1/Person');

  /// IRI for foaf:Agent
  ///
  /// An agent (eg. person, group, software or physical artifact).
  ///
  static const Agent = IriTerm('http://xmlns.com/foaf/0.1/Agent');

  /// IRI for foaf:Document
  ///
  /// A document.
  ///
  static const Document = IriTerm('http://xmlns.com/foaf/0.1/Document');

  /// IRI for foaf:Organization
  ///
  /// An organization.
  ///
  static const Organization = IriTerm('http://xmlns.com/foaf/0.1/Organization');

  /// IRI for foaf:Group
  ///
  /// A class of Agents.
  ///
  static const Group = IriTerm('http://xmlns.com/foaf/0.1/Group');

  /// IRI for foaf:Project
  ///
  /// A project (a collective endeavour of some kind).
  ///
  static const Project = IriTerm('http://xmlns.com/foaf/0.1/Project');

  /// IRI for foaf:Image
  ///
  /// An image.
  ///
  static const Image = IriTerm('http://xmlns.com/foaf/0.1/Image');

  /// IRI for foaf:PersonalProfileDocument
  ///
  /// A personal profile RDF document.
  ///
  static const PersonalProfileDocument = IriTerm(
    'http://xmlns.com/foaf/0.1/PersonalProfileDocument',
  );

  /// IRI for foaf:OnlineAccount
  ///
  /// An online account.
  ///
  static const OnlineAccount = IriTerm(
    'http://xmlns.com/foaf/0.1/OnlineAccount',
  );

  /// IRI for foaf:OnlineGamingAccount
  ///
  /// An online gaming account.
  ///
  static const OnlineGamingAccount = IriTerm(
    'http://xmlns.com/foaf/0.1/OnlineGamingAccount',
  );

  /// IRI for foaf:OnlineEcommerceAccount
  ///
  /// An online e-commerce account.
  ///
  static const OnlineEcommerceAccount = IriTerm(
    'http://xmlns.com/foaf/0.1/OnlineEcommerceAccount',
  );

  /// IRI for foaf:OnlineChatAccount
  ///
  /// An online chat account.
  ///
  static const OnlineChatAccount = IriTerm(
    'http://xmlns.com/foaf/0.1/OnlineChatAccount',
  );

  /// IRI for foaf:isPrimaryTopicOf
  ///
  /// A document that this thing is the primary topic of.
  ///
  static const isPrimaryTopicOf = IriTerm(
    'http://xmlns.com/foaf/0.1/isPrimaryTopicOf',
  );

  /// IRI for foaf:mbox [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A
  /// personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that  there is (across time and change) at most one individual that ever has any particular value for foaf:mbox.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const mbox = IriTerm('http://xmlns.com/foaf/0.1/mbox');

  /// IRI for foaf:mbox_sha1sum [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the  first owner of the mailbox.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const mbox_sha1sum = IriTerm('http://xmlns.com/foaf/0.1/mbox_sha1sum');

  /// IRI for foaf:gender [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The gender of this Agent (typically but not necessarily 'male' or 'female').
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const gender = IriTerm('http://xmlns.com/foaf/0.1/gender');

  /// IRI for foaf:geekcode [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A textual geekcode for this person, see http://www.geekcode.com/geek.html
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const geekcode = IriTerm('http://xmlns.com/foaf/0.1/geekcode');

  /// IRI for foaf:dnaChecksum [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A checksum for the DNA of some thing. Joke.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const dnaChecksum = IriTerm('http://xmlns.com/foaf/0.1/dnaChecksum');

  /// IRI for foaf:sha1
  ///
  /// A sha1sum hash, in hex.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Document
  ///
  static const sha1 = IriTerm('http://xmlns.com/foaf/0.1/sha1');

  /// IRI for foaf:based_near [Expects: http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing]
  ///
  /// A location that something is based near, for some broadly human notion of near.
  ///
  /// Can be used on: http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing
  ///
  static const based_near = IriTerm('http://xmlns.com/foaf/0.1/based_near');

  /// IRI for foaf:title
  ///
  /// Title (Mr, Mrs, Ms, Dr. etc)
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const title = IriTerm('http://xmlns.com/foaf/0.1/title');

  /// IRI for foaf:nick
  ///
  /// A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const nick = IriTerm('http://xmlns.com/foaf/0.1/nick');

  /// IRI for foaf:jabberID [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A jabber ID for something.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const jabberID = IriTerm('http://xmlns.com/foaf/0.1/jabberID');

  /// IRI for foaf:aimChatID [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// An AIM chat ID
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const aimChatID = IriTerm('http://xmlns.com/foaf/0.1/aimChatID');

  /// IRI for foaf:skypeID [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A Skype ID
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const skypeID = IriTerm('http://xmlns.com/foaf/0.1/skypeID');

  /// IRI for foaf:icqChatID [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// An ICQ chat ID
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const icqChatID = IriTerm('http://xmlns.com/foaf/0.1/icqChatID');

  /// IRI for foaf:yahooChatID [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A Yahoo chat ID
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const yahooChatID = IriTerm('http://xmlns.com/foaf/0.1/yahooChatID');

  /// IRI for foaf:msnChatID [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// An MSN chat ID
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const msnChatID = IriTerm('http://xmlns.com/foaf/0.1/msnChatID');

  /// IRI for foaf:name [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A name for some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const name = IriTerm('http://xmlns.com/foaf/0.1/name');

  /// IRI for foaf:firstName [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The first name of a person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const firstName = IriTerm('http://xmlns.com/foaf/0.1/firstName');

  /// IRI for foaf:lastName [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The last name of a person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const lastName = IriTerm('http://xmlns.com/foaf/0.1/lastName');

  /// IRI for foaf:givenName
  ///
  /// The given name of some person.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const givenName = IriTerm('http://xmlns.com/foaf/0.1/givenName');

  /// IRI for foaf:givenname
  ///
  /// The given name of some person.
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const givenname = IriTerm('http://xmlns.com/foaf/0.1/givenname');

  /// IRI for foaf:surname [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The surname of some person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const surname = IriTerm('http://xmlns.com/foaf/0.1/surname');

  /// IRI for foaf:family_name [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The family name of some person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person, http://xmlns.com/foaf/0.1/Person
  ///
  static const family_name = IriTerm('http://xmlns.com/foaf/0.1/family_name');

  /// IRI for foaf:familyName [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The family name of some person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person, http://xmlns.com/foaf/0.1/Person
  ///
  static const familyName = IriTerm('http://xmlns.com/foaf/0.1/familyName');

  /// IRI for foaf:phone
  ///
  /// A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const phone = IriTerm('http://xmlns.com/foaf/0.1/phone');

  /// IRI for foaf:homepage [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A homepage for some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const homepage = IriTerm('http://xmlns.com/foaf/0.1/homepage');

  /// IRI for foaf:weblog [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A weblog of some thing (whether person, group, company etc.).
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const weblog = IriTerm('http://xmlns.com/foaf/0.1/weblog');

  /// IRI for foaf:openid [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// An OpenID for an Agent.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const openid = IriTerm('http://xmlns.com/foaf/0.1/openid');

  /// IRI for foaf:tipjar [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A tipjar document for this agent, describing means for payment and reward.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const tipjar = IriTerm('http://xmlns.com/foaf/0.1/tipjar');

  /// IRI for foaf:plan [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A .plan comment, in the tradition of finger and '.plan' files.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const plan = IriTerm('http://xmlns.com/foaf/0.1/plan');

  /// IRI for foaf:made [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// Something that was made by this agent.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const made = IriTerm('http://xmlns.com/foaf/0.1/made');

  /// IRI for foaf:maker [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// An agent that
  /// made this thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const maker = IriTerm('http://xmlns.com/foaf/0.1/maker');

  /// IRI for foaf:img [Expects: http://xmlns.com/foaf/0.1/Image]
  ///
  /// An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage).
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const img = IriTerm('http://xmlns.com/foaf/0.1/img');

  /// IRI for foaf:depiction [Expects: http://xmlns.com/foaf/0.1/Image]
  ///
  /// A depiction of some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const depiction = IriTerm('http://xmlns.com/foaf/0.1/depiction');

  /// IRI for foaf:depicts [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A thing depicted in this representation.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Image
  ///
  static const depicts = IriTerm('http://xmlns.com/foaf/0.1/depicts');

  /// IRI for foaf:thumbnail [Expects: http://xmlns.com/foaf/0.1/Image]
  ///
  /// A derived thumbnail image.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Image
  ///
  static const thumbnail = IriTerm('http://xmlns.com/foaf/0.1/thumbnail');

  /// IRI for foaf:myersBriggs [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A Myers Briggs (MBTI) personality classification.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const myersBriggs = IriTerm('http://xmlns.com/foaf/0.1/myersBriggs');

  /// IRI for foaf:workplaceHomepage [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A workplace homepage of some person; the homepage of an organization they work for.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const workplaceHomepage = IriTerm(
    'http://xmlns.com/foaf/0.1/workplaceHomepage',
  );

  /// IRI for foaf:workInfoHomepage [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A work info homepage of some person; a page about their work for some organization.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const workInfoHomepage = IriTerm(
    'http://xmlns.com/foaf/0.1/workInfoHomepage',
  );

  /// IRI for foaf:schoolHomepage [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A homepage of a school attended by the person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const schoolHomepage = IriTerm(
    'http://xmlns.com/foaf/0.1/schoolHomepage',
  );

  /// IRI for foaf:knows [Expects: http://xmlns.com/foaf/0.1/Person]
  ///
  /// A person known by this person (indicating some level of reciprocated interaction between the parties).
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const knows = IriTerm('http://xmlns.com/foaf/0.1/knows');

  /// IRI for foaf:interest [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A page about a topic of interest to this person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const interest = IriTerm('http://xmlns.com/foaf/0.1/interest');

  /// IRI for foaf:topic_interest [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A thing of interest to this person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const topic_interest = IriTerm(
    'http://xmlns.com/foaf/0.1/topic_interest',
  );

  /// IRI for foaf:publications [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A link to the publications of this person.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const publications = IriTerm('http://xmlns.com/foaf/0.1/publications');

  /// IRI for foaf:currentProject [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A current project this person works on.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const currentProject = IriTerm(
    'http://xmlns.com/foaf/0.1/currentProject',
  );

  /// IRI for foaf:pastProject [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A project this person has previously worked on.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Person
  ///
  static const pastProject = IriTerm('http://xmlns.com/foaf/0.1/pastProject');

  /// IRI for foaf:fundedBy [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// An organization funding a project or person.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const fundedBy = IriTerm('http://xmlns.com/foaf/0.1/fundedBy');

  /// IRI for foaf:logo [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A logo representing some thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const logo = IriTerm('http://xmlns.com/foaf/0.1/logo');

  /// IRI for foaf:topic [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A topic of some page or document.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Document
  ///
  static const topic = IriTerm('http://xmlns.com/foaf/0.1/topic');

  /// IRI for foaf:primaryTopic [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The primary topic of some page or document.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Document
  ///
  static const primaryTopic = IriTerm('http://xmlns.com/foaf/0.1/primaryTopic');

  /// IRI for foaf:focus [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// The underlying or 'focal' entity associated with some SKOS-described concept.
  ///
  /// Can be used on: http://www.w3.org/2004/02/skos/core#Concept
  ///
  static const focus = IriTerm('http://xmlns.com/foaf/0.1/focus');

  /// IRI for foaf:page [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// A page or document about this thing.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const page = IriTerm('http://xmlns.com/foaf/0.1/page');

  /// IRI for foaf:theme [Expects: http://www.w3.org/2002/07/owl#Thing]
  ///
  /// A theme.
  ///
  /// Can be used on: http://www.w3.org/2002/07/owl#Thing
  ///
  static const theme = IriTerm('http://xmlns.com/foaf/0.1/theme');

  /// IRI for foaf:account [Expects: http://xmlns.com/foaf/0.1/OnlineAccount]
  ///
  /// Indicates an account held by this agent.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const account = IriTerm('http://xmlns.com/foaf/0.1/account');

  /// IRI for foaf:holdsAccount [Expects: http://xmlns.com/foaf/0.1/OnlineAccount]
  ///
  /// Indicates an account held by this agent.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const holdsAccount = IriTerm('http://xmlns.com/foaf/0.1/holdsAccount');

  /// IRI for foaf:accountServiceHomepage [Expects: http://xmlns.com/foaf/0.1/Document]
  ///
  /// Indicates a homepage of the service provide for this online account.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/OnlineAccount
  ///
  static const accountServiceHomepage = IriTerm(
    'http://xmlns.com/foaf/0.1/accountServiceHomepage',
  );

  /// IRI for foaf:accountName [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// Indicates the name (identifier) associated with this online account.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/OnlineAccount
  ///
  static const accountName = IriTerm('http://xmlns.com/foaf/0.1/accountName');

  /// IRI for foaf:member [Expects: http://xmlns.com/foaf/0.1/Agent]
  ///
  /// Indicates a member of a Group
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Group
  ///
  static const member = IriTerm('http://xmlns.com/foaf/0.1/member');

  /// IRI for foaf:membershipClass
  ///
  /// Indicates the class of individuals that are a member of a Group
  ///
  /// Can be used on all classes in this vocabulary
  ///
  static const membershipClass = IriTerm(
    'http://xmlns.com/foaf/0.1/membershipClass',
  );

  /// IRI for foaf:birthday [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The birthday of this Agent, represented in mm-dd string form, eg. '12-31'.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const birthday = IriTerm('http://xmlns.com/foaf/0.1/birthday');

  /// IRI for foaf:age [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// The age in years of some agent.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const age = IriTerm('http://xmlns.com/foaf/0.1/age');

  /// IRI for foaf:status [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A string expressing what the user is happy for the general public (normally) to know about their current activity.
  ///
  /// Can be used on: http://xmlns.com/foaf/0.1/Agent
  ///
  static const status = IriTerm('http://xmlns.com/foaf/0.1/status');
}
