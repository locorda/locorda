// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/rdf_core.dart';

/// Universal Properties for the Foaf vocabulary
///
/// Universal properties are RDF properties that have no explicitly defined domain
/// and can therefore be applied to any resource within this vocabulary's context.
/// In RDF, when a property has no rdfs:domain constraint, it can theoretically be
/// used with any subject, but best practice is to use them only within
/// the intended vocabulary context.
///
/// This class collects all such properties from the Foaf vocabulary to make them
/// easily accessible without cluttering the class-specific property interfaces.
class FoafUniversalProperties {
  // Private constructor prevents instantiation
  const FoafUniversalProperties._();

  /// dnaChecksum [Expects: http://www.w3.org/2000/01/rdf-schema#Literal]
  ///
  /// A checksum for the DNA of some thing. Joke.
  ///
  static const dnaChecksum = IriTerm('http://xmlns.com/foaf/0.1/dnaChecksum');

  /// title
  ///
  /// Title (Mr, Mrs, Ms, Dr. etc)
  ///
  static const title = IriTerm('http://xmlns.com/foaf/0.1/title');

  /// nick
  ///
  /// A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames).
  ///
  static const nick = IriTerm('http://xmlns.com/foaf/0.1/nick');

  /// givenName
  ///
  /// The given name of some person.
  ///
  static const givenName = IriTerm('http://xmlns.com/foaf/0.1/givenName');

  /// givenname
  ///
  /// The given name of some person.
  ///
  static const givenname = IriTerm('http://xmlns.com/foaf/0.1/givenname');

  /// phone
  ///
  /// A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).
  ///
  static const phone = IriTerm('http://xmlns.com/foaf/0.1/phone');

  /// membershipClass
  ///
  /// Indicates the class of individuals that are a member of a Group
  ///
  static const membershipClass = IriTerm(
    'http://xmlns.com/foaf/0.1/membershipClass',
  );
}
